// Code generated by templ - DO NOT EDIT.

// templ: version: 0.2.476
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func graph() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_graph_af27`,
		Function: `function __templ_graph_af27(){var labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],
    var values: [200, 150, 350, 225, 600],
        let chart = new Chart(this.$refs.canvas.getContext('2d'), {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    data: values,
                    backgroundColor: '#77C1D2',
                    borderColor: '#77C1D2',
                }],
            },
            options: {
                interaction: { intersect: false },
                scales: { y: { beginAtZero: true }},
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        displayColors: false,
                        callbacks: {
                            label(point) {
                                return 'Sales: $'+point.raw
                            }
                        }
                    }
                }
            }
        })

        this.$watch('values', () => {
            chart.data.labels = this.labels
            chart.data.datasets[0].data = this.values
            chart.update()
        })}`,
		Call:       templ.SafeScript(`__templ_graph_af27`),
		CallInline: templ.SafeScriptInline(`__templ_graph_af27`),
	}
}

func ChartJS(values []int) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div x-data=\"{\n        labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;, &#39;May&#39;],\n        values: [200, 150, 350, 225, 125],\n        init() {\n            let chart = new Chart(this.$refs.canvas.getContext(&#39;2d&#39;), {\n                type: &#39;line&#39;,\n                data: {\n                    labels: this.labels,\n                    datasets: [{\n                        data: this.values,\n                        backgroundColor: &#39;#77C1D2&#39;,\n                        borderColor: &#39;#77C1D2&#39;,\n                    }],\n                },\n                options: {\n                    interaction: { intersect: false },\n                    scales: { y: { beginAtZero: true }},\n                    plugins: {\n                        legend: { display: false },\n                        tooltip: {\n                            displayColors: false,\n                            callbacks: {\n                                label(point) {\n                                    return &#39;Sales: $&#39;+point.raw\n                                }\n                            }\n                        }\n                    }\n                }\n            })\n\n            this.$watch(&#39;values&#39;, () =&gt; {\n                chart.data.labels = this.labels\n                chart.data.datasets[0].data = this.values\n                chart.update()\n            })\n        }\n    }\" class=\"w-full\"><canvas x-ref=\"canvas\" class=\"rounded-lg bg-white p-8\"></canvas></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
